precisao$durationMin <- NULL
precisao %>%
filter(municipio == "Bom Sucesso", valid == TRUE, encontrado == TRUE, tp=FALSE, criterio=="Despesa Orçamentária") %>%
arrange(desc(criterio))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor)
)
metricas_result
metricas_result$tp_total <- NULL
metricas_result$fp_total <- NULL
metricas_result$fn_total <- NULL
metricas_result$median_duration <- NULL
metricas_result$max_duration <- NULL
metricas_result %>%
select(municipio, aproach ,recall, precision, f1_score) %>%
arrange(desc(recall))
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit')) %>%
arrange(desc(bfs))
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=recall,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=f1_score,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=median_duration_min,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_durationMin,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_num_access_node,  color=aproach), position = "jitter")
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(municipio == "Bom Sucesso", valid == TRUE, encontrado == TRUE, tp=FALSE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(municipio == "Bom Sucesso", valid == TRUE, encontrado == TRUE, tp==FALSE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(municipio == "Bom Sucesso", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Bom Sucesso", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Bom Sucesso", valid == TRUE, encontrado == FALSE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Bom Sucesso", valid == TRUE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Bom Sucesso", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == TRUE, TP==FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == TRUE, tp==FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor)
)
metricas_result
metricas_result$tp_total <- NULL
metricas_result$fp_total <- NULL
metricas_result$fn_total <- NULL
metricas_result$median_duration <- NULL
metricas_result$max_duration <- NULL
metricas_result %>%
select(municipio, aproach ,recall, precision, f1_score) %>%
arrange(desc(recall))
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit')) %>%
arrange(desc(bfs))
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=recall,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=f1_score,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=median_duration_min,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_durationMin,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_num_access_node,  color=aproach), position = "jitter")
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == TRUE, tp==FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach, date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date)))) %>%
summarise(
valid,
contNodeNumberAccess,
found,
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor)
)
metricas_result
metricas_result$tp_total <- NULL
metricas_result$fp_total <- NULL
metricas_result$fn_total <- NULL
metricas_result$median_duration <- NULL
metricas_result$max_duration <- NULL
metricas_result %>%
select(municipio, aproach ,recall, precision, f1_score) %>%
arrange(desc(recall))
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit')) %>%
arrange(desc(bfs))
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=recall,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=f1_score,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=median_duration_min,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_durationMin,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_num_access_node,  color=aproach), position = "jitter")
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach, date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date)))) %>%
summarise(
valid,
contNodeNumberAccess,
found,
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor)
)
metricas_result
metricas_result$tp_total <- NULL
metricas_result$fp_total <- NULL
metricas_result$fn_total <- NULL
metricas_result$median_duration <- NULL
metricas_result$max_duration <- NULL
metricas_result %>%
select(municipio, aproach ,recall, precision, f1_score) %>%
arrange(desc(recall))
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit')) %>%
arrange(desc(bfs))
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=recall,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=f1_score,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=median_duration_min,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_durationMin,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_num_access_node,  color=aproach), position = "jitter")
precisao$contNodeNumberAccess <- NULL
precisao$duration <- NULL
precisao$durationMin <- NULL
precisao %>%
filter(aproach=='bfs', municipio == "Serraria", valid == FALSE, encontrado == TRUE) %>%
arrange(desc(criterio))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
kable(resultados_avaliacoes) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(knitr)
library(kableExtra)
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
kable(resultados_avaliacoes) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
resultados_avaliacoes %>%
group_by(item, criterio) %>%
summarise(frequencia_positiva = sum(valid == TRUE), frequencia_negativa = sum(valid == FALSE)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(knitr)
library(kableExtra)
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes %>%
group_by(item, criterio) %>%
summarise(frequencia_positiva = sum(valid == TRUE), frequencia_negativa = sum(valid == FALSE)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
resultados_avaliacoes %>%
group_by(item, criterio) %>%
summarise(frequencia_positiva = sum(valid == TRUE), frequencia_negativa = sum(valid == FALSE)) %>%
arrange(desc(frequencia_negativa)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
