& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess)
)
metricas_result
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fn = sum(fn == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fn), fill="#DD8888",stat="identity")+
facet_grid(municipio ~ .)
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fp = sum(fp == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fp), fill="#DD8888",stat="identity") +
facet_grid(municipio ~ .)
empresas_portais %>%
group_by(fornecedor)
empresas_portais %>%
group_by(fornecedor) %>%
summarise(tipo_fornecer)
empresas_portais %>%
group_by(fornecedor)
empresas_portais %>%
group_by(fornecedor) %>%
summarise(max(tipo_fornecer))
empresas_portais[is.na(data)] <- ""
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(max(tipo_fornecer))
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(max(tipo_fornecer), num_municipios_atendidos = n())
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(num_municipios_atendidos = n())
resultados_avaliacoes = read_avaliacoes()
gararito = read_gabaritos()
data<-full_join(gararito, resultados_avaliacoes, by=c("municipio", "item", "criterio"))
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
fornecedores <- readr::read_csv(here::here("data/empresas.csv"))
fornecedores
library(tidyverse) #
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes_dataset <- readr::read_csv(here::here("data/resultados_avaliacoes.csv"))
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation/bfs/last", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach) %>%
summarise(
valid,
contNodeNumberAccess,
found,
date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date))),
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes<-full_join(avaliacoes, avaliacoes_dataset, by=c("municipio", "item", "criterio", "aproach",
"date", "valid", "contNodeNumberAccess",
"found", "pathSought", "durationMin", "duration"))
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
gararito = read_gabaritos()
data<-full_join(gararito, resultados_avaliacoes, by=c("municipio", "item", "criterio"))
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
fornecedores <- readr::read_csv(here::here("data/empresas.csv"))
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(num_municipios_atendidos = n())
fornecedores
data[is.na(data)] <- ""
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess)
)
metricas_result
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fn = sum(fn == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fn), fill="#DD8888",stat="identity")+
facet_grid(municipio ~ .)
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fp = sum(fp == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fp), fill="#DD8888",stat="identity") +
facet_grid(municipio ~ .)
View(resultados_avaliacoes)
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation/bfs/last", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach) %>%
summarise(
valid,
contNodeNumberAccess,
found,
date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date))),
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
gararito = read_gabaritos()
data<-full_join(gararito, resultados_avaliacoes, by=c("municipio", "item", "criterio"))
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
fornecedores <- readr::read_csv(here::here("data/empresas.csv"))
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(num_municipios_atendidos = n())
fornecedores
data[is.na(data)] <- ""
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
gararito = read_gabaritos()
data<-full_join(gararito, resultados_avaliacoes, by=c("municipio", "item", "criterio"))
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
fornecedores <- readr::read_csv(here::here("data/empresas.csv"))
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(num_municipios_atendidos = n())
fornecedores
data[is.na(data)] <- ""
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess)
)
metricas_result
View(precisao)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation/bfs/last", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach) %>%
summarise(
valid,
contNodeNumberAccess,
found,
date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date))),
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
gararito = read_gabaritos()
data<-full_join(gararito, resultados_avaliacoes, by=c("municipio", "item", "criterio"))
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
fornecedores <- readr::read_csv(here::here("data/empresas.csv"))
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(num_municipios_atendidos = n())
fornecedores
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess)
)
metricas_result
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fn = sum(fn == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fn), fill="#DD8888",stat="identity")+
facet_grid(municipio ~ .)
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fp = sum(fp == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fp), fill="#DD8888",stat="identity") +
facet_grid(municipio ~ .)
View(precisao)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes_dataset <- readr::read_csv(here::here("data/resultados_avaliacoes.csv"))
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation/bfs/last", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach) %>%
summarise(
valid,
contNodeNumberAccess,
found,
date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date))),
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
gararito = read_gabaritos()
data<-full_join(gararito, resultados_avaliacoes, by=c("municipio", "item", "criterio"))
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
fornecedores <- readr::read_csv(here::here("data/empresas.csv"))
empresas_portais[is.na(empresas_portais)] <- ""
empresas_portais %>%
group_by(fornecedor) %>%
summarise(num_municipios_atendidos = n())
fornecedores
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess)
)
metricas_result
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fn = sum(fn == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fn), fill="#DD8888",stat="identity")+
facet_grid(municipio ~ .)
precisao %>%
group_by(criterio, municipio) %>%
summarize(total_fp = sum(fp == TRUE), total_itens = n()) %>%
ggplot() +
geom_bar(aes(x=criterio, y=total_fp), fill="#DD8888",stat="identity") +
facet_grid(municipio ~ .)
View(precisao)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes_dataset <- readr::read_csv(here::here("data/resultados_avaliacoes.csv"))
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach) %>%
summarise(
valid,
contNodeNumberAccess,
found,
date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date))),
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes<-full_join(avaliacoes, avaliacoes_dataset, by=c("municipio", "item", "criterio", "aproach",
"date", "valid", "contNodeNumberAccess",
"found", "pathSought", "durationMin", "duration"))
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach) %>%
summarise(
valid,
contNodeNumberAccess,
found,
date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date))),
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
View(avaliacoes)
