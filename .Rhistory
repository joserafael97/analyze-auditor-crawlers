max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor)
)
metricas_result
metricas_result %>%
group_by(aproach) %>%
summarise(ocorrencia = n()) %>%
ggplot(aes(y=ocorrencia, x=reorder(aproach, +(ocorrencia)))) +
geom_bar(stat = "identity",  fill="#5499C7") +
ggtitle("Número de Avaliações por Abordagem") +
xlab("Abordagem") +
ylab("Número de avaliações") +
coord_flip()
metricas_result %>%
ggplot(aes(x=recall)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=precision)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=recall, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=precision, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_duration_min, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_durationMin, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
filter(recall < 0.8)  %>%
ggplot(aes(x=recall, fill=combination)) +
geom_histogram( alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(DT)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor),
tipo_exp = last(tipo_exp)
)
metricas_result
metricas_result %>%
group_by(aproach) %>%
summarise(ocorrencia = n()) %>%
ggplot(aes(y=ocorrencia, x=reorder(aproach, +(ocorrencia)))) +
geom_bar(stat = "identity",  fill="#5499C7") +
ggtitle("Número de Avaliações por Abordagem") +
xlab("Abordagem") +
ylab("Número de avaliações") +
coord_flip()
metricas_result %>%
ggplot(aes(x=recall)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=precision)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=recall, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=precision, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_duration_min, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_durationMin, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
filter(recall < 0.8)  %>%
ggplot(aes(x=recall, fill=combination)) +
geom_histogram( alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
filter(recall < 0.8)  %>%
ggplot(aes(x=recall, fill=combination)) +
geom_histogram( alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit'), tipo_exp=last(tipo_exp)) %>%
arrange(desc(dfs)) %>%
datatable(options = list(pageLength = 10),  rownames = FALSE, class = 'cell-border stripe')
metricas_result %>%
filter(recall < 0.8 & !is.na(municipio))  %>%
ggplot(aes(x=recall, fill=combination)) +
geom_histogram( alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
filter(recall < 0.8 & !is.na(aproach))  %>%
ggplot(aes(x=recall, fill=combination)) +
geom_histogram( alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
filter(recall < 0.8 & !is.na(aproach))
metricas_result %>%
filter(recall < 0.8 & !is.na(aproach))
metricas_result %>%
filter(recall < 0.8 & !is.na(aproach))  %>%
ggplot(aes(x=recall, fill=combination)) +
geom_histogram( alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes_dataset <- readr::read_csv(here::here("data/resultados_avaliacoes.csv"))
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach, date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date)))) %>%
summarise(
valid,
contNodeNumberAccess,
found,
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes <- avaliacoes %>%
group_by(municipio, aproach, date) %>%
mutate(tipo_exp = ifelse( n() <= 48, "less_itens", 'all_itens')) %>%
ungroup()
avaliacoes<-full_join(avaliacoes, avaliacoes_dataset, by=c("municipio", "item", "criterio", "aproach",
"date", "valid", "contNodeNumberAccess",
"found", "pathSought", "durationMin", "duration", 'tipo_exp'))
avaliacoes <- avaliacoes %>%
distinct(municipio, item, criterio, aproach, .keep_all = TRUE)
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
View(avaliacoes)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(DT)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor),
tipo_exp = last(tipo_exp)
)
metricas_result
metricas_result %>%
group_by(aproach) %>%
summarise(ocorrencia = n()) %>%
ggplot(aes(y=ocorrencia, x=reorder(aproach, +(ocorrencia)))) +
geom_bar(stat = "identity",  fill="#5499C7") +
ggtitle("Número de Avaliações por Abordagem") +
xlab("Abordagem") +
ylab("Número de avaliações") +
coord_flip()
metricas_result %>%
ggplot(aes(x=recall)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=precision)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=recall, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=precision, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_duration_min, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_durationMin, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit'), tipo_exp=last(tipo_exp)) %>%
arrange(desc(dfs)) %>%
datatable(options = list(pageLength = 10),  rownames = FALSE, class = 'cell-border stripe')
metricas_result %>%
select(municipio, aproach ,recall, precision, f1_score) %>%
arrange(desc(recall)) %>%
datatable(options = list(pageLength = 30),  rownames = FALSE, class = 'cell-border stripe')
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=recall,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=f1_score,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=median_duration_min,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_durationMin,  color=aproach), position = "jitter")
metricas_result %>%
ggplot(aes(x = aproach, y = median_duration_min)) +
geom_boxplot(fill = "orange")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_num_access_node,  color=aproach), position = "jitter")
metricas_result %>%
ggplot(aes(x = aproach, y = max_num_access_node)) +
geom_boxplot(fill = "orange")
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(tidyr)
library(readr)
library(lubridate)
avaliacoes <- data.frame(fromJSON("http://localhost:5000/api/v1/evaluation", flatten = TRUE))
avaliacoes$duration <- NULL
avaliacoes$durationMin <- NULL
avaliacoes <- avaliacoes %>%
unnest(criterions)
avaliacoes$`__v` <- NULL
avaliacoes$`_id` <- NULL
avaliacoes <- avaliacoes %>%
rename(criterio = name) %>%
unnest(itens) %>%
group_by(item = name, municipio = county, criterio, aproach, date = as.POSIXct(gsub('Z', ' ', gsub('T', ' ', date)))) %>%
summarise(
valid,
contNodeNumberAccess,
found,
pathSought,
durationMin = as.numeric(durationMin),
duration = as.numeric(duration)
)
avaliacoes <- avaliacoes %>%
group_by(municipio, aproach, date) %>%
mutate(tipo_exp = ifelse( n() <= 48, "less_itens", 'all_itens')) %>%
ungroup()
avaliacoes_dataset <- readr::read_csv(here::here("data/resultados_avaliacoes.csv"))
avaliacoes %>%
write_csv(here::here("data/resultados_avaliacoes.csv"))
library(tidyverse) #
library(jsonlite) # Ler dados json
library(dplyr) #
library(here)
library(DT)
library(ggplot2)
source(here::here("code/lib.R"))
theme_set(theme_bw())
resultados_avaliacoes = read_avaliacoes()
resultados_avaliacoes[is.na(resultados_avaliacoes)] <- ""
gararito = read_gabaritos()
gararito[is.na(gararito)] <- ""
empresas_portais <- readr::read_csv(here::here("data/empresas_portais.csv"))
empresas_portais <- empresas_portais %>%
select(municipio, fornecedor)
gararito<-left_join(gararito, empresas_portais, by=c("municipio"))
# concatena os dois csv o do gabarito e avaliações do crawler
data<-full_join(resultados_avaliacoes, gararito, by=c("municipio", "item", "criterio"))
precisao <- data %>%
group_by(municipio, criterio, item, aproach, date) %>%
mutate(
#verifica se a avaliação foi acertiva
tp = valid == TRUE
& valid == encontrado
#valida se no gabarito e na avaliação o item foi encontrado na mesma url
& (grepl(local_encontrado, pathSought) |
grepl(local_encontrado_2, pathSought)),
fn =  valid == FALSE
& encontrado == TRUE,
fp = valid == TRUE
& encontrado == FALSE
)
metricas_result <- precisao %>%
#filter(!is.na(aproach )) %>%
group_by(municipio, aproach, date) %>%
summarise(
tp_total = sum(tp),
fn_total = sum(fn),
fp_total = sum(fp),
#cálculo das métricas
recall = tp_total/(tp_total + fn_total),
precision =  tp_total/(tp_total + fp_total),
f1_score = (2*(recall*precision))/(recall+precision),
#tempo das avaliações
median_duration_min = median(durationMin),
median_duration = median(duration),
max_duration = max(duration),
max_durationMin = max(durationMin),
median_num_access_node = median(contNodeNumberAccess),
max_num_access_node = max(contNodeNumberAccess),
all_access_node = sum(contNodeNumberAccess),
combination = last(fornecedor),
tipo_exp = last(tipo_exp)
)
metricas_result
metricas_result %>%
group_by(aproach) %>%
summarise(ocorrencia = n()) %>%
ggplot(aes(y=ocorrencia, x=reorder(aproach, +(ocorrencia)))) +
geom_bar(stat = "identity",  fill="#5499C7") +
ggtitle("Número de Avaliações por Abordagem") +
xlab("Abordagem") +
ylab("Número de avaliações") +
coord_flip()
metricas_result %>%
ggplot(aes(x=recall)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=precision)) +
geom_histogram(alpha=0.5, position="identity", bins=20)
metricas_result %>%
ggplot(aes(x=recall, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=precision, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_duration_min, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_durationMin, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=median_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
ggplot(aes(x=max_num_access_node, color=aproach)) +
geom_histogram(fill='white', alpha=0.5, position="identity", bins=20) +
facet_grid(aproach ~ .)
metricas_result %>%
group_by(municipio) %>%
summarise(bfs = sum(aproach == 'bfs'), dfs = sum(aproach == 'dfs'), bandit = sum(aproach == 'bandit'), tipo_exp=last(tipo_exp)) %>%
arrange(desc(dfs)) %>%
datatable(options = list(pageLength = 10),  rownames = FALSE, class = 'cell-border stripe')
metricas_result %>%
select(municipio, aproach ,recall, precision, f1_score) %>%
arrange(desc(recall)) %>%
datatable(options = list(pageLength = 30),  rownames = FALSE, class = 'cell-border stripe')
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=recall,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=f1_score,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=median_duration_min,  color=aproach), position = "jitter")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_durationMin,  color=aproach), position = "jitter")
metricas_result %>%
ggplot(aes(x = aproach, y = median_duration_min)) +
geom_boxplot(fill = "orange")
metricas_result %>%
ggplot() +
geom_point(aes(x=aproach, y=max_num_access_node,  color=aproach), position = "jitter")
metricas_result %>%
ggplot(aes(x = aproach, y = max_num_access_node)) +
geom_boxplot(fill = "orange")
library(tidyverse) #
